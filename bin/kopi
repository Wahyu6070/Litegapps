####################################
#         Kopi Functions           #
####################################
#          By : wahyu6070          #
####################################
print(){ echo "$1"; }
printlog(){
	print "$1"
	if [ "$1" != " " ]; then
	print "$1 [$(date '+%d/%m/%Y %H:%M:%S')]" >> $log
	print "$1 [$(date '+%d/%m/%Y %H:%M:%S')]" >> $loglive
	else
	print "$1" >> $log
	print "$1" >> $loglive
	fi
	}
sedlog(){
	print "[Processing]  $1 [$(date '+%d/%m/%Y %H:%M:%S')]" >> $log
	print "[Processing]  $1 [$(date '+%d/%m/%Y %H:%M:%S')]" >> $loglive
	}
	
	
#
while_log(){
	print "$1" | tee -a $log
	}
listlog(){
	print " " >> $log
	print "---------- Folder List : $2 ----------" >> $log
	print " " >> $loglive
	print "---------- Folder List : $2 ----------" >> $loglive
	find "$1" -type f | while read lol; do
	while_log "| $(du -sah $lol | cut -f 1) | $lol"
	done >> $loglive
	print "--------------------------------------" >> $log
	print " " >> $log
	print "--------------------------------------" >> $loglive
	print " " >> $loglive
	}

getp(){ grep "^$1" "$2" | head -n1 | cut -d = -f 2; }

loadings() {
  PID=$!
  a=0;
  while [ -d /proc/$PID ]; do
    b=$((+1))
    a=$((a+1))
    sleep 0.9s
    printf "\r${@} [${a}Second]"
  done
}

loadingm() {
  PID=$!
  a=0
  while [ -d /proc/$PID ]; do
    b=$((a+1))
    a=$((h+1))
    sleep 59.9s
    printf "\r${@} [${b}Minutes]"
  done
}

loadingz() {
  PID=$!
  a=0
  while [ -d /proc/$PID ]; do
    b=$((a+1))
    a=$((a+1))
    sleep 0.9s
    printf "#"
  done
}

printmid() {
  local CHAR=$(printf "$@" | sed 's|\\e[[0-9;]*m||g' | wc -m)
  local hfCOLUMN=$((COLUMNS/2))
  local hfCHAR=$((CHAR/2))
  local indent=$((hfCOLUMN-hfCHAR))
  echo "$(printf '%*s' "${indent}" '') $@"
}

getp(){ grep "^$1" "$2" | head -n1 | cut -d = -f 2; }

del(){
	rm -rf "$@"
}

cdir(){ mkdir -p "$@"; }

setime(){
	if [[ $1 == '-f' ]] && [ "$2" ] && [ $3 -eq $3 ]; then
	   if [ -f "$2" ]; then
	      touch -ct $3 "$2" 2>/dev/null || echo "setime: bad '$3': Value too large for defined data type"
	   else
	      echo "setime: $2: Is not file"
	   fi
	elif [[ $1 == '-r' ]] && [ "$2" ] && [ $3 -eq $3 ]; then
	   if [ -d "$2" ]; then
	      find "$2" -print | while read filename; do
	      touch -ct $3 "$filename" 2>/dev/null || echo "setime: bad '$3': Value too large for defined data type"
	      done
	   else
	      echo "setime: $2: Is not directory"
	   fi
	elif [[ $1 == '--version' ]] || [[ $1 == '-v' ]]; then
	echo "setime v1.0 Copyright (C) 2020 wahyu kurniawan (wahyu6070)."
    elif [[ $1 == '--help' ]] || [[ $1 == '-h' ]]; then
    echo "usage : setime <options> <input> <datetime>"
    echo " "
    echo "example : setime -r /sdcard/download 202004081503"
    echo " "
    echo "options"
    echo "-f                    file"
    echo "-r                    change all directory and file"
    echo "-v, --version         version"
    echo "-h, --help            help"
    echo " "
    echo "setime v1.0 since 2020-04-09 Copyright (C) 2020 wahyu kurniawan (wahyu6070)."
    else
    echo "usage : setime --help"
    fi
}


#############################
#     Color
#############################

bash_color(){
G='\e[01;32m'		# GREEN TEXT
R='\e[01;31m'		# RED TEXT
Y='\e[01;33m'		# YELLOW TEXT
B='\e[01;34m'		# BLUE TEXT
V='\e[01;35m'		# VIOLET TEXT
Bl='\e[01;30m'		# BLACK TEXT
C='\e[01;36m'		# CYAN TEXT
W='\e[01;37m'		# WHITE TEXT
BGBL='\e[1;30;47m'	# Background W Text Bl
N='\e[0m'			# How to use (example): echo "${G}example${N}"
loadBar=' '			# Load UI
# Remove color codes if -nc or in ADB Shell
[ -n "$1" -a "$1" == "-nc" ] && shift && NC=true
[ "$NC" -o -n "$LOGNAME" ] && {
	G=''; R=''; Y=''; B=''; V=''; Bl=''; C=''; W=''; N=''; BGBL=''; loadBar='=';
}
}


upinfo (){ grep_prop $1 $tmp/module.prop; }
sedlog (){ echo "    [Prossesing] ===> $1" >> $log; }
debloat(){
	for findep in $system/priv-app $system/app $system/product/priv-app $system/product/app
	do
	unset debloatdir
	  if [ -d $findep/$1 ]; then
	  debloatdir=$findep/$1
      break
	  fi
	  done
	  if [ $debloatdir ]; then
	  sedlog "Debloating $1..."
	  [ $(echo "$debloatdir" | grep product) ] && dir123=$MODPATH/system/product || dir123=$MODPATH/system
	  [ $(echo "$debloatdir" | grep priv-app) ] && newdebloat=$dir123/priv-app || newdebloat=$dir123/app
	  mkdir -p $newdebloat/$1 || sedlog "Failed Chreating Folder $newdebloat/$1"
	  sedlog "Debloating directory $debloatdir"
	  touch $newdebloat/$1/$1.apk || sedlog "Failed Chreating File $newdebloat/$1"
	  echo "#Pingger Debloat" > $newdebloat/$1/$1.apk
	  else
	  sedlog "Debloating $1 Not found"
	  fi
}
ch_con(){
chcon -h u:object_r:system_file:s0 "$1" || setlog "Failed chcon $1"
}

tarex(){
	tar -xf "$1" -C "$2" || sedlog "Failed Extract tar $1 to $2"
	}
	
	
abort(){
	print " " | tee -a $log | tee -a $loglive
	print " !!! $1" | tee -a $log | tee -a $loglive
	print " " | tee -a $log | tee -a $loglive
	sleep 4s
	exit 1
	}
####################################
# declaration
####################################
case $(uname -m) in
*x86) ARCH32=x86 ;;
*) ARCH32=arm
esac
