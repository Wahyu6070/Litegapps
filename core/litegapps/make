#################################################
#litegapps functions
#################################################
BASE_LITEGAPPS=$base/core/litegapps
copy_binary_flashable(){
	case $(get_config compression) in
     xz)
       local flashable_bin_32=xz
     ;;
      br | brotli)
       local flashable_bin_32=brotli
     ;;
     zip)
     	local flashable_bin_32=zip
     ;;
     7z | 7za | 7zip | 7zr | p7zip)
     	local flashable_bin_32=7za
     ;;
     zstd | zst)
     	local flashable_bin_32=zstd
     ;;
     gz | gzip | gunzip)
     	local flashable_bin_32=gz
     ;;
     esac
	local input_arch=$1
	case $input_arch in
		arm | arm64)
			local ARCHINPUT=arm
			for W in zipalign tar zip $flashable_bin_32; do
				if [ -f $base/bin/$ARCHINPUT/$W ]; then
				cdir $tmp/$WFL/bin/$ARCHINPUT
				cp -pf $base/bin/$ARCHINPUT/$W $tmp/$WFL/bin/$ARCHINPUT/
				else
					ERROR "Binary <$base/bin/$ARCHINPUT/$W> not found"
				fi
			
			done
		
		;;
		x86 | x86_64)
		echo
		
		;;
	esac
}

get_android_version(){
	local input=$1
	case $input in
		21) echo 5.0 ;;
		22) echo 5.1 ;;
		23) echo 6.0 ;;
		24) echo 7.0 ;;
		25) echo 7.1 ;;
		26) echo 8.0 ;;
		27) echo 8.1 ;;
		28) echo 9.0 ;;
		29) echo 10.0 ;;
		30) echo 11.0 ;;
		31) echo 12.0 ;;
	 esac
	}

make_flashable_litegapps(){
	for WFL in MAGISK RECOVERY AUTO; do
		printlog "- Build flashable [$WFL]"
		cdir $tmp/$WFL
		copy_binary_flashable $BIN_ARCH
			# copy core/utils/magisk or kopi installer
			for W in 27-litegapps.sh litegapps-functions litegapps-post-fs litegapps; do
				if [ -f $base/core/utils/$W ]; then
					cp -pf $base/core/utils/$W $tmp/$WFL/bin/
				else
					ERROR "utils <$base/core/utils/$W> not found"
				fi
			
			done
			# copy core/utils files
			for W in customize.sh README.md LICENSE; do
				if [ -f $BASE_LITEGAPPS/utils/$W ]; then
				cp $BASE_LITEGAPPS/utils/$W $tmp/$WFL/
				else
				ERROR "magisk files <$BASE_LITEGAPPS/utils/$W> not found"
				fi
			done
		case $WFL in
			MAGISK)
				cp -af $base/core/utils/magisk/* $tmp/$WFL/
			;;
			RECOVERY)
				cp -af $base/core/utils/kopi/* $tmp/$WFL/
				#kopi mode install kopi (recovery)
				sed -i 's/'"$(getp typeinstall $tmp/$WFL/module.prop)"'/'"kopi"'/g' $tmp/$WFL/module.prop
			;;
			AUTO)
				cp -af $base/core/utils/kopi/* $tmp/$WFL/
			;;
		esac
		# copy file.tar.(type archive) in tmp
			for W in $(ls -1 $tmp); do
				if [ -f $tmp/$W  ]; then
					test ! -d $tmp/$WFL/files && cdir $tmp/$WFL/files
				 	cp -pf $tmp/$W $tmp/$WFL/files/
				fi
			done
			
			local MODULE_PROP=$tmp/$WFL/module.prop
			local MODULE_DESC="litegapps is a google apps package that supports almost all arch and android versions while maintaining lightness, saving battery and more."
			sed -i 's/'"$(getp name $MODULE_PROP)"'/'"LiteGapps $W_ARCH $(get_android_version $W_SDK) $PROP_STATUS"'/g' $MODULE_PROP
			sed -i 's/'"$(getp author $MODULE_PROP)"'/'"$PROP_BUILDER"'/g' $MODULE_PROP
			sed -i 's/'"$(getp version $MODULE_PROP)"'/'"$PROP_VERSION"'/g' $MODULE_PROP
			sed -i 's/'"$(getp versionCode $MODULE_PROP)"'/'"$PROP_VERSIONCODE"'/g' $MODULE_PROP
			sed -i 's/'"$(getp date $MODULE_PROP)"'/'"$(date +%d-%m-%Y)"'/g' $MODULE_PROP
			sed -i 's/'"$(getp description $MODULE_PROP)"'/'"$MODULE_DESC"'/g' $MODULE_PROP
			
			#set time stamp
			set_time_stamp $tmp/$WFL
			
			local NAME_ZIP="[$WFL]LiteGapps_${W_ARCH}_$(get_android_version $W_SDK)_$(date +%Y%m%d)_${PROP_STATUS}.zip"
			local OUT_ZIP=$out/litegapps/$W_ARCH/$W_SDK
			printlog "- Build ZIP"
			cd $tmp/$WFL
			test ! -d $OUT_ZIP && cdir $OUT_ZIP
			test -f $OUT_ZIP/$NAME_ZIP && del $OUT_ZIP/$NAME_ZIP
			$bin/zip -r${PROP_ZIP_LEVEL} $OUT_ZIP/$NAME_ZIP . >/dev/null
			printlog " Name   : $NAME_ZIP"
			printlog " Level  : $PROP_ZIP_LEVEL"
			printlog " Size   : $(du -sh $OUT_ZIP/$NAME_ZIP | cut -f1)"
			printlog " Sha256 : $($bin/busybox sha256sum $OUT_ZIP/$NAME_ZIP | cut -d' ' -f1)"
			printlog "- Done "
			printlog " "
	done
	}
make_flashable_litegapps_all(){
	for WFL in MAGISK RECOVERY AUTO; do
		printlog "- Build flashable [$WFL]"
		cdir $tmp/$WFL
		copy_binary_flashable $BIN_ARCH
			# copy core/utils/magisk or kopi installer
			for W in 27-litegapps.sh litegapps-functions litegapps-post-fs litegapps; do
				if [ -f $base/core/utils/$W ]; then
					cp -pf $base/core/utils/$W $tmp/$WFL/bin/
				else
					ERROR "utils <$base/core/utils/$W> not found"
				fi
			
			done
			# copy core/utils files
			for W in customize.sh README.md LICENSE; do
				if [ -f $BASE_LITEGAPPS/utils/$W ]; then
				cp $BASE_LITEGAPPS/utils/$W $tmp/$WFL/
				else
				ERROR "magisk files <$BASE_LITEGAPPS/utils/$W> not found"
				fi
			done
		case $WFL in
			MAGISK)
				cp -af $base/core/utils/magisk/* $tmp/$WFL/
			;;
			RECOVERY)
				cp -af $base/core/utils/kopi/* $tmp/$WFL/
				#kopi mode install kopi (recovery)
				sed -i 's/'"$(getp typeinstall $tmp/$WFL/module.prop)"'/'"kopi"'/g' $tmp/$WFL/module.prop
			;;
			AUTO)
				cp -af $base/core/utils/kopi/* $tmp/$WFL/
			;;
		esac
		# copy file.tar.(type archive) in tmp
			for W in $(ls -1 $tmp); do
				if [ -f $tmp/$W  ]; then
					test ! -d $tmp/$WFL/files && cdir $tmp/$WFL/files
				 	cp -pf $tmp/$W $tmp/$WFL/files/
				fi
			done
			
			local MODULE_PROP=$tmp/$WFL/module.prop
			local MODULE_DESC="litegapps is a google apps package that supports almost all arch and android versions while maintaining lightness, saving battery and more."
			sed -i 's/'"$(getp name $MODULE_PROP)"'/'"LiteGapps $PROP_STATUS"'/g' $MODULE_PROP
			sed -i 's/'"$(getp author $MODULE_PROP)"'/'"$PROP_BUILDER"'/g' $MODULE_PROP
			sed -i 's/'"$(getp version $MODULE_PROP)"'/'"$PROP_VERSION"'/g' $MODULE_PROP
			sed -i 's/'"$(getp versionCode $MODULE_PROP)"'/'"$PROP_VERSIONCODE"'/g' $MODULE_PROP
			sed -i 's/'"$(getp date $MODULE_PROP)"'/'"$(date +%d-%m-%Y)"'/g' $MODULE_PROP
			sed -i 's/'"$(getp description $MODULE_PROP)"'/'"$MODULE_DESC"'/g' $MODULE_PROP
			
			#set time stamp
			set_time_stamp $tmp/$WFL
			
			local NAME_ZIP="[$WFL]LiteGapps_$(date +%Y%m%d)_${PROP_STATUS}.zip"
			local OUT_ZIP=$out/litegapps/all
			printlog "- Build ZIP"
			cd $tmp/$WFL
			test ! -d $OUT_ZIP && cdir $OUT_ZIP
			test -f $OUT_ZIP/$NAME_ZIP && del $OUT_ZIP/$NAME_ZIP
			$bin/zip -r${PROP_ZIP_LEVEL} $OUT_ZIP/$NAME_ZIP . >/dev/null
			printlog " Name   : $NAME_ZIP"
			printlog " Level  : $PROP_ZIP_LEVEL"
			printlog " Size   : $(du -sh $OUT_ZIP/$NAME_ZIP | cut -f1)"
			printlog " Sha256 : $($bin/busybox sha256sum $OUT_ZIP/$NAME_ZIP | cut -d' ' -f1)"
			printlog "- Done "
			printlog " "
	done
	}
#################################################
#Core
#################################################
if [ $(get_config litegapps.arch) = all ] && [ $(get_config litegapps.sdk) = all ]; then
	#binary copy architecture type
	BIN_ARCH=arm
	printlog "## Building LiteGapps ##"
	printlog " "
	printlog "Architecture=all"
	printlog "SDK=all"
	printlog "Android Target=all"
	printlog " "
	cp -af $BASE_LITEGAPPS/gapps/* $tmp/
	lgapps_unzip
	make_tar
	make_tar_arch
	make_archive
	make_flashable_litegapps_all
else
	LITEGAPPS_ARCH=`get_config litegapps.arch | sed "s/,/ /g"`
	LITEGAPPS_SDK=`get_config litegapps.sdk | sed "s/,/ /g"`
	for W_ARCH in $LITEGAPPS_ARCH; do
		#binary copy architecture type
		BIN_ARCH=$W_ARCH
		for W_SDK in $LITEGAPPS_SDK; do
			clear
			printlog "## Building LiteGapps ##"
			printlog " "
			printlog "Architecture=$W_ARCH"
			printlog "SDK=$W_SDK"
			printlog "Android Target=$(get_android_version $W_SDK)"
			printlog " "
			[ -d $tmp ] && del $tmp && cdir $tmp || cdir $tmp
			if [ ! -d $BASE_LITEGAPPS/gapps/$W_ARCH/$W_SDK ]; then
				printlog "[ERROR] <$BASE_LITEGAPPS/gapps/$W_ARCH/$W_SDK> not found"
				sleep 2s
				continue
			fi
			[ ! -d $tmp/$W_ARCH/$W_SDK/ ] && cdir $tmp/$W_ARCH/$W_SDK/
			cp -af $BASE_LITEGAPPS/gapps/$W_ARCH/$W_SDK/* $tmp/$W_ARCH/$W_SDK/
			lgapps_unzip
			make_tar
			make_tar_arch
			make_archive
			make_flashable_litegapps
			
		done
	done
fi


